<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:WorkBalance" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:my="clr-namespace:WorkBalance.Domain" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" mc:Ignorable="d" x:Class="WorkBalance.MainWindow"
        Title="MainWindow" Height="Auto" Width="300" ResizeMode="NoResize" Background="#FF454545" WindowStyle="None" Loaded="Window_Loaded" FontSize="10.667"
    Closed="Window_Closed" SizeToContent="Height">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1" />
    </Window.Resources>
	<Window.DataContext>
		<Binding Path="Main" Source="{StaticResource Locator}"/>
	</Window.DataContext>
    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="CreateActivity_Executed"/>
    </Window.CommandBindings>
	<Window.Triggers>
		<EventTrigger RoutedEvent="Expander.Expanded" SourceName="expander">
			<EventTrigger.Actions>
				<BeginStoryboard>
					<Storyboard>
						<DoubleAnimation From="0" To="1" Duration="0:0:1" Storyboard.TargetName="activityInventory" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)">
							<DoubleAnimation.EasingFunction>
								<BounceEase Bounces="3" />
							</DoubleAnimation.EasingFunction>
						</DoubleAnimation>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger.Actions>
		</EventTrigger>
	</Window.Triggers>
    <Border BorderThickness="2" BorderBrush="Black">
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="EnabledStateGroup">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0"/>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="Enabled">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="Disabled">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
    						<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
    					</DoubleAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>
    	<i:Interaction.Triggers>
    		<ei:DataTrigger Binding="{Binding Enabled}" Value="True">
    			<ei:GoToStateAction StateName="Enabled"/>
    		</ei:DataTrigger>
    		<ei:DataTrigger Binding="{Binding Enabled}" Value="False">
    			<ei:GoToStateAction StateName="Disabled"/>
    		</ei:DataTrigger>
    	</i:Interaction.Triggers>
		<Grid >
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<StackPanel Grid.Row="1" Grid.Column="1" Margin="0,5,2,5">
				<Button Grid.Row="1" Grid.Column="1" Content="{Binding Timer.ToggleTimerActionName, Mode=OneWay}" Command="{Binding Timer.ToggleTimerCommand}" Height="19" />
				<Button Grid.Row="1" Grid.Column="1" Content="Activity"  Height="19" Margin="0,2,0,0" Command="{Binding CreateActivityCommand, Mode=OneTime}"/>	
				<Button Grid.Row="1" Grid.Column="1" Content="Interruption" Height="19" Margin="0,2,0,0" />	
			</StackPanel>
			
			
			
			<local:DigitalClock Grid.Row="1" Grid.Column="0" VerticalAlignment="Top" Time="{Binding Timer.Time, Mode=OneWay}" Foreground="Yellow" InactiveSegmentsBrush="#26000000" GlowColor="#FFFEFE00" Height="60" Width="Auto" Margin="10,5,10,5" />
			<Border  HorizontalAlignment="Stretch" Grid.Row="0" Padding="1" BorderThickness="0,0,0,1" BorderBrush="Black" Background="{DynamicResource ShineBrush}" Grid.ColumnSpan="2" Grid.Column="0"  d:LayoutOverrides="GridBox" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
				<StackPanel HorizontalAlignment="Right" Orientation="Horizontal" >
					<Button  Height="14" Width="24" Click="Button_Click">
						<TextBlock Text="_" Margin="0,-8,0,0" />
					</Button>
					<Button Height="14" Width="24" Click="Button_Click_1">
						<TextBlock Text="x" Margin="0,-4,0,0" />
					</Button>
				</StackPanel>
			</Border>
			<Border Grid.ColumnSpan="2" Margin="2,0" Grid.Row="2" Background="{DynamicResource ToolBarButtonHover}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1" CornerRadius="2" >
				<TextBlock Text="{Binding Timer.CurrentActivity.Name}" Foreground="{DynamicResource TextBrush}" Margin="10,0"/>
			</Border>
			<Expander x:Name="expander" Grid.Row="3" Grid.ColumnSpan="2" Header="Activity Inventory">
					<local:ActivityInventoryView x:Name="activityInventory" Height="200">
						<local:ActivityInventoryView.LayoutTransform>
							<ScaleTransform ScaleX="1" ScaleY="0"/>
						</local:ActivityInventoryView.LayoutTransform>
					</local:ActivityInventoryView>
			</Expander>
			<Rectangle x:Name="rectangle" Grid.ColumnSpan="2" Fill="#7FF4F4F5" Grid.RowSpan="4" Visibility="Collapsed" Opacity="0" />			
		</Grid>
	</Border>
</Window>
